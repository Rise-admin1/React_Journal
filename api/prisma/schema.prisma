// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}



model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  password String
  title    String
  surname  String
  otherName String
  affiliation String  
  test String @default("test")
  isAdmin  Boolean  @default(false)
  value String
  label String
  articles Article[]
  createdAt DateTime @default(now())
}

model Journal{
  id     Int      @id @default(autoincrement())
  journalTitle   String   @unique
  journalImageURL String
  journalAbbreviation String
  journalLanguage String
  journalISSN String
  journalDOI String
  journalStartYear Int
  journalPublishedArticles Int @default(0)
  articles Article[]
  createdAt DateTime @default(now())
}




model Article {
  id                        Int      @id @default(autoincrement())
  articleTitle              String
  articleAbstract           String @db.VarChar(3000)
  articleKeywords           String
  articleAuthors            Json
  filesURL                  Json
  rejectionFilesURL         Json
  publicPdfName             String
  awsId                     String
  rejectionText             String @default("")
  specialReview             Boolean
  isReview                  Boolean @default(true)
  isPublished               Boolean @default(false)
  isAccepted                Boolean @default(false)
  articleStatus             String @default("In Review")
  articleReceivedDate       DateTime @default(now())
  articleAcceptedDate       DateTime @updatedAt
  articlePublishedDate      DateTime @updatedAt
  journalId                 Int
  articlePublishedJournal   Journal @relation(fields: [journalId], references: [id])
  userId                    Int
  articlePublishedUser      User     @relation(fields: [userId], references: [id])
  createdAt                 DateTime @default(now())
}

